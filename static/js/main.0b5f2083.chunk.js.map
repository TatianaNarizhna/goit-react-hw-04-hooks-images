{"version":3,"sources":["services/apiService.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","static/default.jpg","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js"],"names":["api","fetchSearch","search","page","fetch","then","response","ok","json","Promise","reject","Error","SearchBar","onSubmit","useState","searchName","setSearchName","formReset","className","e","preventDefault","trim","toast","error","type","autoComplete","value","autoFocus","placeholder","onChange","currentTarget","toLowerCase","GalleryItem","id","webformatURL","largeImageURL","src","alt","ImageGallery","images","onImgClick","onClick","map","ImageGalleryItem","defaultProps","defaultImg","Button","modalRoot","document","querySelector","Modal","onClose","modalImg","useEffect","handleKeyPress","code","window","addEventListener","removeEventListener","createPortal","target","Spinner","color","height","width","App","setImages","setPage","loader","setLoader","setError","showModal","setShowModal","setModalImg","res","hits","prevState","length","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","toggleModal","Loader","message","position","autoClose","newestOnTop","closeOnClick","rtl","query","nodeName","dataset","img","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b5f2083.chunk.js","sourcesContent":["function fetchSearch(search, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${search}&page=${page}&key=21902781-05f70a6abac1a4120ac7c9ed1&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Request ${search} not found`));\n  });\n}\n\nconst api = {\n  fetchSearch,\n};\n\nexport default api;\n\n// .then(response => response.data.hits)\n","// import React, { Component } from \"react\";\nimport  { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\n\nexport default function SearchBar({ onSubmit })  {\n  const [searchName, setSearchName] = useState('');\n\n   const handleSearchChange = (e) => {\n    setSearchName(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (searchName.trim() === \"\") {\n      return toast.error(\"Enter correct request!\");\n    }\n    onSubmit(searchName);\n    // this.setState({ searchName: \"\" })\n    formReset();\n  };\n\n   const formReset = () => {\n    setSearchName('');\n  };\n\n    return (\n      <div>\n        <header className=\"Searchbar\">\n          <form onSubmit={handleFormSubmit} className=\"SearchForm\">\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              value={searchName}\n              autoFocus\n              placeholder=\"Search images and photos\"\n              onChange={handleSearchChange}\n            />\n          </form>\n        </header>\n      </div>\n    );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GalleryItem = ({ id, webformatURL, largeImageURL }) => {\n  return (\n    <li className=\"ImageGalleryItem\" key={id}>\n      <img\n        src={webformatURL}\n        alt=\"img\"\n        className=\"ImageGalleryItem-image\"\n        data-img={largeImageURL}\n      />\n    </li>\n  );\n};\n\nGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default GalleryItem;\n","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport defaultImg from \"../../static/default.jpg\";\n\nconst ImageGallery = ({ images, onImgClick }) => (\n  <ul className=\"ImageGallery\" onClick={onImgClick}>\n    {images.map(({ id, webformatURL, largeImageURL }) => (\n      <ImageGalleryItem\n        key={id}\n        webformatURL={webformatURL}\n        largeImageURL={largeImageURL}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.defaultProps = {\n  webformatURL: defaultImg,\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default ImageGallery;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onClick }) => {\n  return (\n    <div className=\"Absolute-Center \">\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import  { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from \"prop-types\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, modalImg: {modalImg} })  {\n\n  useEffect(() => {\n     const handleKeyPress = (e) => {\n      if (e.code === \"Escape\") {\n        onClose();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n    }\n  }, [onClose]);\n\n   const onOverlayClick = (e) => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n    return createPortal (\n      <div className=\"Overlay\" onClick={onOverlayClick}>\n        <div className=\"Modal\">\n          <img src={modalImg} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  modalImg: PropTypes.object.isRequired,\n};\n","import Loader from \"react-loader-spinner\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"Spinner\">\n      <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import  { useState, useEffect } from 'react';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport api from \"./services/apiService\";\r\nimport SearchBar from \"./components/Searchbar/Searchbar\";\r\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\r\nimport Button from \"./components/Button/Button\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport Loader from \"./components/Loader/Loader\";\r\n\r\nexport default function App()  {\r\n  const [searchName, setSearchName] = useState('');\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loader, setLoader] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalImg, setModalImg] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(searchName === '') {\r\n      return;\r\n    }\r\n      fetchSearch();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchName])\r\n  \r\n   const fetchSearch = () => {\r\n    setLoader(true);\r\n    api\r\n     .fetchSearch(searchName, page)\r\n      .then((res) => {\r\n        const { hits } = res;\r\n        setImages(prevState => [...prevState, ...hits])\r\n        setPage(prevState => prevState + 1)\r\n\r\n        if (images.length > 12) {\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n      })\r\n      .catch(error => setError(error))\r\n      .finally(() => setLoader(false))\r\n  };\r\n\r\n   const formSubmit = query => {\r\n     if( query !== searchName ) {\r\n      setSearchName(query);\r\n      setPage(1)\r\n      setImages([]);\r\n      setError(null);\r\n     }\r\n  };\r\n\r\n  // const prevSearch = useRef();\r\n\r\n   const toggleModal = () => {\r\n    setShowModal(showModal =>  !showModal);\r\n  };\r\n\r\n   const onImgClick = (e) => {\r\n    if (e.target.nodeName !== \"IMG\") {\r\n      return;\r\n    }\r\n    setModalImg({\r\n      modalImg: e.target.dataset.img,\r\n    });\r\n    toggleModal();\r\n  };\r\n\r\n    return (\r\n      <div>\r\n        {loader && <Loader />}\r\n        {error && <p>{error.message}</p>}\r\n\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={2000}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n        />\r\n        <SearchBar onSubmit={formSubmit} />\r\n        <ImageGallery images={images} onImgClick={onImgClick} />\r\n      \r\n        {images.length > 0 && !loader && <Button onClick={fetchSearch} />}\r\n        {showModal && <Modal modalImg={modalImg} onClose={toggleModal} />}\r\n      \r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}